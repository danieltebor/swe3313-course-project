@startuml database-service-class-diagram

namespace Service {
namespace DatabaseService {

left to right direction

' T should be a JSON serializable object.
interface IJsonDatabaseService<T> {
    + Save(T data)
    + GetByKey(DatabaseKey key, int value) : T
    + GetByKey(DatabaseKey key, string value) : T
    + GetAll() : List<T>
    + GenerateNewPrimaryKey() : int
    + AddObserver(IObserver observer)
    + RemoveObserver(IObserver observer)
}

' T should be a JSON serializable object.
abstract JsonDatabaseServiceBase<T> {
    - _databaseName: string
    - _databasePath: string
    - _databaseLock: Mutex
    - _transientPrimaryKeys: Set<int>
    # _keys: Dictionary<string, dynamic> 
    + JsonDatabaseServiceBase(string databaseName)
}

JsonDatabaseServiceBase -up-|> IJsonDatabaseService

class UserDatabaseService {
    - _transientUsernames: Set<string>
    + RegisterTransientUsername(string username)
}

UserDatabaseService -up-|> JsonDatabaseServiceBase
note right of UserDatabaseService: JsonDatabaseServiceBase<User>

class ReceiptDatabaseService {}

ReceiptDatabaseService -up-|> JsonDatabaseServiceBase
note right of ReceiptDatabaseService: JsonDatabaseServiceBase<Receipt>

class InventoryDatabaseService {}

InventoryDatabaseService -up-|> JsonDatabaseServiceBase
note right of InventoryDatabaseService: JsonDatabaseServiceBase<Item>

class SaleDatabaseService {}

SaleDatabaseService -up-|> JsonDatabaseServiceBase
note right of SaleDatabaseService: JsonDatabaseServiceBase<Sale>

}
}

@enduml